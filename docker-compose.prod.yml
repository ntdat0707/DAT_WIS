version: '3'

services:
  # database:
  #   container_name: ${DB_HOST}
  #   build:
  #     context: .
  #     dockerfile: ./docker/database/Dockerfile
  #   restart: always
  #   ports:
  #     - "3309:${DB_PORT}"
  #   environment:
  #     - "MYSQL_DATABASE=${DB_NAME}"
  #     - "MYSQL_ALLOW_EMPTY_PASSWORD=yes"
  #   volumes:
  #     - ./docker-volumes/mysql:/var/lib/mysql
  #   networks:
  #     - network
  # command: echo ${DB_HOST}

  # rabbitmq:
  #   image: rabbitmq:3.7.5-management
  #   container_name: rabbitmq
  #   restart: always
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #   volumes:
  #     - ./.docker-volumes/rabbitmq-data:/var/lib/rabbitmq

  # bookoke-mongo:
  #   container_name: mongodb
  #   image: mongo
  #   build: ./docker/mongoDB
  #   restart: always
  #   ports:
  #     - '27017:27017'
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_NAME}
  #   networks:
  #     - network
  #   volumes:
  #     - ./.docker-volumes/mongo-data:/data/db
  gateway:
    container_name: ${GTW_HOST}
    env_file: .env
    image: registry.digitalocean.com/wisere/wisere
    restart: always
    ports:
      - '${GTW_PORT}:${GTW_PORT}'
    environment:
      NODE_ENV: 'staging'
      NODE_NAME: 'gateway-service'
    networks:
      - network
    depends_on:
      - customer-service
  customer-service:
    env_file: .env
    container_name: ${SVC_CUSTOMER_HOST}
    image: registry.digitalocean.com/wisere/wisere
    restart: always
    ports:
      - '${SVC_CUSTOMER_PORT}:${SVC_CUSTOMER_PORT}'
    environment:
      NODE_ENV: 'staging'
      NODE_NAME: 'customer-service'
    networks:
      - network

networks:
  network:
    driver: bridge
